ometa Condition {
    expr = atom:l operator:op atom:r -> [ op, l, r ],

    operator = ``<='' | '<' | ``>='' | '>' | ``=='' | ``!='',

    identifier = <(letter|'_') (letter | digit | '_')*>:v -> this._options.variables[v],

    number = digit+ '.' digit+ | digit+,

    string = ('\''|'"'):q (~seq(q) char):v q -> v,

    atom = identifier | literal,

    literal = string | number
}

ometa Evaluator {
    interp = [ '>' anything:x anything:y ] -> x > y
        | ['<' anything:x anything:y ]     -> x < y
        | ['>=' anything:x anything:y ]    -> x >= y
        | ['<=' anything:x anything:y ]    -> x <= y
        | ['!=' anything:x anything:y ]    -> x != y
        | ['==' anything:x anything:y ]    -> x == y
}

module.exports = function (str, variables) {
    var tree = Condition.matchAll(str, 'expr', { variables: variables });
    return Evaluator.match(tree, 'interp');
}
